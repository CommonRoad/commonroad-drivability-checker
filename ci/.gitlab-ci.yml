stages:
  - compile
  - build-test-python
  - static-test
  - build-wheels
  - deploy
  - publish

image: $CI_REGISTRY/cps/rapid-prototyping-setup/ci:1.0

before_script:
  - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.lrz.de/".insteadOf "git@gitlab.lrz.de:"

.python-prepare: &python-prepare
  - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.lrz.de/".insteadOf "git@gitlab.lrz.de:"
  - python -m pip install --upgrade pip
  - pip install -r ./requirements.txt
  - pip install -r ./test_requirements.txt

.copy-cpp-dist: &copy-cpp-dist
  - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.lrz.de/".insteadOf "git@gitlab.lrz.de:"
  - mv ./commonroad/dist/include/ /commonroad/dist/

### building project ###
# TODO uncomment compile jobs
build-compile-commands:
  stage: compile
  script:
    - git submodule update --init
    # run CMake in order to get compile_commands.json
    - mkdir build && cd build
    - cmake -DCMAKE_INSTALL_PREFIX=/commonroad/dist -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
    - cd ..
  needs: []
  artifacts:
    paths:
      - ./build/compile_commands.json
    expire_in: 20 minutes

build-clang:
  stage: compile
  script:
    - git submodule update --init
    - export CC=clang
    - export CXX=clang++
    - mkdir build-debug && cd build-debug
    - cmake -DCMAKE_INSTALL_PREFIX=/commonroad/dist/ -DCMAKE_BUILD_TYPE=Release ..
    - cmake --build . -- -j 4
  needs: []

build-gcc:
  stage: compile
  script:
    - git submodule update --init
    - export CC=gcc
    - export CXX=g++
    - mkdir build-debug && cd build-debug
    - cmake -DCMAKE_INSTALL_PREFIX=/commonroad/dist/ -DCMAKE_BUILD_TYPE=Release ..
    - cmake --build . -- -j 4
  needs: []

build-standalone:
  stage: compile
  script:
    - git submodule update --init
    - mkdir build-debug && cd build-debug
    - cmake -DCMAKE_INSTALL_PREFIX=/commonroad/dist/ -DCMAKE_BUILD_TYPE=Release ..
    - cmake --build . -- -j 4
  needs: []

build-test:
  stage: compile
  script:
    - git submodule update --init
    - mkdir build-debug && cd build-debug
    - cmake -DCMAKE_INSTALL_PREFIX=/commonroad/dist/ -DCMAKE_BUILD_TYPE=Debug ..
    - cmake --build . -- -j 4
  needs: []
  artifacts:
    paths:
      - ./build/
      - ./dist/
    expire_in: 30 minutes
## tests ###
# python-37 build-test stage additionally build the documentation
build-test-python-37:
  stage: build-test-python
  before_script:
    - source activate cr37
    - *python-prepare
    # install pandoc from conda-forge for building the doc
    - conda install -c conda-forge pandoc
  script:
    - bash ./build.sh -j 4 --cgal -i -d
    - cd tests
    - python run_tests.py
  artifacts:
    paths:
      - ./doc/build
    expire_in: 30 minutes
  needs: []

build-test-python-38:
  stage: build-test-python
  before_script:
    - source activate cr38
    - *python-prepare
  script:
    - bash ./build.sh -j 4 --cgal -i
    - cd tests
    - python run_tests.py
  needs: []

build-test-python-39:
  stage: build-test-python
  before_script:
    - source activate cr39
    - *python-prepare
  script:
    - bash ./build.sh -j 4 --cgal -i
    - cd tests
    - python run_tests.py
  needs: []

### static test ###
clang-tidy:
  stage: static-test
  script: bash ./ci/clang-tidy.sh
  needs:
    - job: build-compile-commands
      artifacts: true

### build wheels ####
build-wheels-py-39:
  stage: build-wheels
  image: $CI_REGISTRY/cps/commonroad-drivability-checker/wheels-reqs
  when: manual
  script:
    # Prepare build (master branch is built)
    - git clone -b master git@gitlab.lrz.de:cps/commonroad-drivability-checker.git
    - cd commonroad-drivability-checker
    - git submodule update --init
    # Preparing PyPi
    - /opt/python/cp39-cp39/bin/python setup.py sdist
    - /opt/python/cp39-cp39/bin/python setup.py bdist_wheel
    - cd dist
    - auditwheel show *.whl
    - auditwheel repair *.whl
  artifacts:
    paths:
      - $CI_PROJECT_DIR/commonroad-drivability-checker/dist

build-wheels-py-38:
  stage: build-wheels
  image: $CI_REGISTRY/cps/commonroad-drivability-checker/wheels-reqs
  when: manual
  script:
    # Prepare build (master branch is built)
    - git clone -b master git@gitlab.lrz.de:cps/commonroad-drivability-checker.git
    - cd commonroad-drivability-checker
    - git submodule update --init
    # Preparing PyPi
    - /opt/python/cp38-cp38/bin/python setup.py sdist
    - /opt/python/cp38-cp38/bin/python setup.py bdist_wheel
    - cd dist
    - auditwheel show *.whl
    - auditwheel repair *.whl
  artifacts:
    paths:
      - $CI_PROJECT_DIR/commonroad-drivability-checker/dist

build-wheels-py-37:
  stage: build-wheels
  image: $CI_REGISTRY/cps/commonroad-drivability-checker/wheels-reqs
  when: manual
  script:
    # Prepare build (master branch is built)
    - git clone -b master git@gitlab.lrz.de:cps/commonroad-drivability-checker.git
    - cd commonroad-drivability-checker
    - git submodule update --init
    # Preparing PyPi
    - /opt/python/cp37-cp37m/bin/python setup.py sdist
    - /opt/python/cp37-cp37m/bin/python setup.py bdist_wheel
    - cd dist
    - auditwheel show *.whl
    - auditwheel repair *.whl
  artifacts:
    paths:
      - $CI_PROJECT_DIR/commonroad-drivability-checker/dist

build-wheels-py-36:
  stage: build-wheels
  image: $CI_REGISTRY/cps/commonroad-drivability-checker/wheels-reqs
  when: manual
  script:
    # Prepare build (master branch is built)
    - git clone -b master git@gitlab.lrz.de:cps/commonroad-drivability-checker.git
    - cd commonroad-drivability-checker
    - git submodule update --init
    # Preparing PyPi
    - /opt/python/cp36-cp36m/bin/python setup.py sdist
    - /opt/python/cp36-cp36m/bin/python setup.py bdist_wheel
    - cd dist
    - auditwheel show *.whl
    - auditwheel repair *.whl
  artifacts:
    paths:
      - $CI_PROJECT_DIR/commonroad-drivability-checker/dist

### deploy wheels ###
push-to-internal-registry:
  # push built wheels to the internal GitLab PyPi registry
  stage: deploy
  image: $CI_REGISTRY/cps/commonroad-drivability-checker/wheels-reqs
  when: manual
  only:
    - development
  script:
    - cd commonroad-drivability-checker
    - /opt/python/cp39-cp39/bin/python -m pip install twine
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token /opt/python/cp39-cp39/bin/python -m twine upload --skip-existing --repository-url https://gitlab.lrz.de/api/v4/projects/${CI_PROJECT_ID}/packages/pypi dist/wheelhouse/* dist/commonroad-drivability-checker-*.tar.gz --verbose
  needs:
    - job: build-wheels-py-39
      artifacts: true
    - job: build-wheels-py-38
      artifacts: true
    - job: build-wheels-py-37
      artifacts: true
    - job: build-wheels-py-36
      artifacts: true

push-to-external-pypi-test-registry:
  # push built wheels to the external PyPi test registry
  # at: https://test.pypi.org/project/commonroad-drivability-checker/
  stage: deploy
  image: $CI_REGISTRY/cps/commonroad-drivability-checker/wheels-reqs
  when: manual
  only:
    - master
  script:
    - cd commonroad-drivability-checker
    - /opt/python/cp39-cp39/bin/python -m pip install twine
    - TWINE_PASSWORD=${CR_PYPI_TEST_PASSWORD} TWINE_USERNAME=${CR_PYPI_TEST_USERNAME} /opt/python/cp39-cp39/bin/python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/wheelhouse/* dist/commonroad-drivability-checker-*.tar.gz --verbose
  needs:
    - job: build-wheels-py-39
      artifacts: true
    - job: build-wheels-py-38
      artifacts: true
    - job: build-wheels-py-37
      artifacts: true
    - job: build-wheels-py-36
      artifacts: true

push-to-external-pypi-registry:
  # push built wheels to the external PyPi registry
  # at: https://pypi.org/project/commonroad-drivability-checker/
  stage: deploy
  image: $CI_REGISTRY/cps/commonroad-drivability-checker/wheels-reqs
  when: manual
  only:
    - master
  script:
    - cd commonroad-drivability-checker
    - /opt/python/cp39-cp39/bin/python -m pip install twine
    - TWINE_PASSWORD=${CR_PYPI_RELEASE_PASSWORD} TWINE_USERNAME=${CR_PYPI_RELEASE_USERNAME} /opt/python/cp39-cp39/bin/python -m twine upload dist/wheelhouse/* dist/commonroad-drivability-checker-*.tar.gz --verbose
  needs:
    - job: build-wheels-py-39
      artifacts: true
    - job: build-wheels-py-38
      artifacts: true
    - job: build-wheels-py-37
      artifacts: true
    - job: build-wheels-py-36
      artifacts: true


### publish documentation ###
pages:
  # Push the latest documentation of the development branch to the GitLab Pages
  # at https://cps.pages.gitlab.lrz.de/commonroad-drivability-checker/
  stage: publish
  script:
    - mv ./doc/build/sphinx public
  needs:
    - job: build-test-python-37
      artifacts: true
  artifacts:
    paths:
      - public
  environment:
    name: Gitlab Pages
    url: https://cps.pages.gitlab.lrz.de/commonroad-drivability-checker/
  only:
    - master
